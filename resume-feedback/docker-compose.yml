services:
  application:
    image: springboot-app  # 이미 빌드된 Spring Boot 이미지
    mem_limit: 1024m
    cpus: "1.0"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"  # 애플리케이션은 내부적으로 8080에서 실행
      - "1099:1099"  # JMX 포트
    environment:
      - JAVA_OPTS=-XX:+UseSerialGC -Xms768m -Xmx896m
      - SPRING_PROFILES_ACTIVE=prod  # 필요에 따라 프로파일 설정
      - TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/tessdata  # Tesseract 데이터 경로 설정
      - OPENAI_API_KEY=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
  nginx:
    image: nginx:latest  # 공식 nginx 이미지
    ports:
      - "80:80"   # HTTP 포트
      - "443:443" # HTTPS 포트
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # Nginx 설정 파일 마운트
      - ./ssl:/etc/nginx/ssl  # IntelliJ 프로젝트 내의 ssl 폴더와 매핑
    depends_on:
      - application # Nginx는 Spring Boot 애플리케이션이 실행된 후에 실행
